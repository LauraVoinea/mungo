aspect PrimitiveTypes {

	// static private final TypeDecl CompilationUnit.voidType = new VoidType(new Modifiers(), "void", new List());
	// static private final TypeDecl CompilationUnit.nullType = new NullType(new Modifiers(), "null", new List());
	static private final TypeDecl CompilationUnit.NoNameType = new NoNameType(new Modifiers(), "unknown", new List());
	static private final TypeDecl CompilationUnit.classType = new ClassType(new Modifiers(), "class", new List());
	static private final TypeDecl CompilationUnit.ObjectType = new ObjectType(new Modifiers(), "Object", new List());

	static private final TypeDecl CompilationUnit.stringType =
		new UnknownTypeDecl(new Modifiers(), "String", new List<BodyDecl>());

	static protected TypeDecl CompilationUnit.getNoNameType() {
		return new UnknownType();
	}
	static protected TypeDecl CompilationUnit.getStringType() {
		return stringType;
	}

	static protected TypeDecl CompilationUnit.getClassType() {
		return classType;
	}

	public boolean NoNameType.equals(Object o) {
		return true;
	}

	public String NoNameType.toString() {
		return "unknown name";
	}

	public String ClassType.toString() {
		return "class";
	}

}
