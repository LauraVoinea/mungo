aspect typestateCheck {
	protected void ClassDecl.typestateCheck() {
		getGraph();
	}

	protected void Declarator.typestateCheck() {
		if(getTypeAccess().lookupTSType() != null && getTypeAccess().lookupTSType().isTypestateClassDeclType()) {
			typestate.reportErrors("Object reference is used uninitialised.");
			if(getTypeAccess().lookupTSType().getTypestateDecl() != null) {
				GraphNode t = getTypeAccess().lookupTSType().getTypestateDecl().createTypestate().normalise();
				System.out.println("AAAAAA 1 " + getTypeAccess().lookupTSType().getTypestateDecl() + " ? " + t.getType()+ " ? " + t.getId());

				typestate.checkTypestate(t, "The typestate of the created object does not match its declared typestate.");
			}
		}
	}

	protected void ParameterDeclaration.typestateCheck() {
		if(getTypeAccess().lookupTSType() != null && getTypeAccess().lookupTSType().isTypestateClassDeclType()) {
			typestate.reportErrors("Object reference is used uninitialised");
			if(getTypeAccess().lookupTSType().getTypestateDecl() != null) {
				GraphNode t = getTypeAccess().lookupTSType().getTypestateDecl().createTypestate().normalise();
				System.out.println("AAAAAA 2 " + t.getType()+ " ? " + t.getId() + " " +  getTypeAccess().lookupTSType() + " " + getTypeAccess().lookupTSType().isTypestateClassDeclType());
				typestate.checkTypestate(t, "The typestate of the created object does not match its declared typestate.");
			}
		}
	}
/*
	protected void MethodAccess.typestateCheck() {
		MethodDecl md= lookupMethod(name());		//TODO get a lookupMethod()
		if(md != null && md.isTypestateMethod()) {
			GraphNode t = md.getTypestateMethod().getTType().createTypestate();
			if(t != null) {
				t.normalise();
				typestate.checkTypestate(t, "The typestate of the returned object does not match the return typestate.");
			}
		}
	}
*/
}
