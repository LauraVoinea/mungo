aspect Annotation {
  syn boolean Modifiers.hasTypestateAnnotation(String packageName) = hasAnnotation(packageName, "Typestate");

  syn Annotation Modifiers.getTypestateAnnotation(String packageName) {
    for (int i = 0; i < getNumModifier(); i++) {
      if (getModifier(i).isAnnotation(packageName, "Typestate")) {
        return (Annotation) getModifier(i);
      }
    }
    return null;
  }


  rewrite ClassDecl{
      when (!(this instanceof TypestateClassDecl) && getModifiers().hasTypestateAnnotation(packageName())) to TypestateClassDecl {
        return new TypestateClassDecl(getModifiers().treeCopyNoTransform(),
                getID(),
                getSuperClassOpt().treeCopyNoTransform(),
                getImplementsList().treeCopyNoTransform(),
                getBodyDeclList());

            }
        }

  // TypestateClassDecl contributes
  //    errorf("Semantic Error: Class %s cannot extend a class with a typestate.",
  //        this.getID())
  //    when hasSuperclass()
  //        && superclass().isTypestateClassDeclType()
  //         to CompilationUnit.problems();

}
